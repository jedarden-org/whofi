version: '3.8'

services:
  # Backend API Server (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: csi-backend
    ports:
      - "3000:3000"
      - "8080:8080"  # WebSocket port
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/csi.db
      - MQTT_ENABLED=${MQTT_ENABLED:-false}
      - NTP_SERVER=${NTP_SERVER:-pool.ntp.org}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./data:/app/data  # SQLite database storage
    restart: unless-stopped
    networks:
      - csi_network

  # Frontend Web Server (Nginx + React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: csi-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - csi_network

  # Optional: MQTT Broker if needed for legacy support
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: csi-mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    restart: unless-stopped
    networks:
      - csi_network
    profiles:
      - mqtt  # Only starts if --profile mqtt is used

volumes:
  mosquitto_data:
  mosquitto_logs:

networks:
  csi_network:
    driver: bridge